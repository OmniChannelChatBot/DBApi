// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using System;

namespace DB.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ChatBotDbContext))]
    partial class ChatBotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DB.Api.Model.Chat.ChatMessage", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>("ChatRoomId")
                    .HasColumnType("int");

                b.Property<DateTimeOffset>("Date")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid>("Guid")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Text")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Type")
                    .HasColumnType("int");

                b.Property<Guid>("UserGuid")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("UserName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("ChatMessages");
            });

            modelBuilder.Entity("DB.Api.Model.Chat.ChatRoom", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<DateTimeOffset>("Date")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid>("Guid")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("ChatRooms");
            });

            modelBuilder.Entity("DB.Api.Model.Identity.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int?>("ChatRoomId")
                    .HasColumnType("int");

                b.Property<DateTimeOffset>("CreateDate")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("Email")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FirstName")
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid>("Guid")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("LastName")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Password")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PasswordHash")
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTimeOffset>("UpdateDate")
                    .HasColumnType("datetimeoffset");

                b.Property<int>("UserType")
                    .HasColumnType("int");

                b.Property<string>("Username")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("ChatRoomId");

                b.ToTable("Users");
            });

            modelBuilder.Entity("DB.Api.Model.Identity.User", b =>
            {
                b.HasOne("DB.Api.Model.Chat.ChatRoom", null)
                    .WithMany("Users")
                    .HasForeignKey("ChatRoomId");
            });
#pragma warning restore 612, 618
        }
    }
}